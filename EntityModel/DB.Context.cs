//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FreshDBEntities : DbContext
    {
        public FreshDBEntities()
            : base("name=FreshDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BRANCH_TYPE> BRANCH_TYPE { get; set; }
        public virtual DbSet<SYSTEM_ACCESS_POLICY> SYSTEM_ACCESS_POLICY { get; set; }
        public virtual DbSet<SYSTEM_AUDIT_INFO> SYSTEM_AUDIT_INFO { get; set; }
        public virtual DbSet<TABLE_ADDRESS> TABLE_ADDRESS { get; set; }
        public virtual DbSet<TABLE_BRANCH_INFO> TABLE_BRANCH_INFO { get; set; }
        public virtual DbSet<TABLE_CATEGORY> TABLE_CATEGORY { get; set; }
        public virtual DbSet<TABLE_CUSTOMER> TABLE_CUSTOMER { get; set; }
        public virtual DbSet<TABLE_DESIGNATION> TABLE_DESIGNATION { get; set; }
        public virtual DbSet<TABLE_DISTRICT> TABLE_DISTRICT { get; set; }
        public virtual DbSet<TABLE_DIVISION> TABLE_DIVISION { get; set; }
        public virtual DbSet<TABLE_EMAIL> TABLE_EMAIL { get; set; }
        public virtual DbSet<TABLE_ITEM> TABLE_ITEM { get; set; }
        public virtual DbSet<TABLE_ORDER> TABLE_ORDER { get; set; }
        public virtual DbSet<TABLE_ORDER_DETAILS> TABLE_ORDER_DETAILS { get; set; }
        public virtual DbSet<TABLE_PURCHASE> TABLE_PURCHASE { get; set; }
        public virtual DbSet<TABLE_PURCHASE_DETAILS> TABLE_PURCHASE_DETAILS { get; set; }
        public virtual DbSet<TABLE_PURCHASE_RETURN> TABLE_PURCHASE_RETURN { get; set; }
        public virtual DbSet<TABLE_PURCHASE_RETURN_DETAILS> TABLE_PURCHASE_RETURN_DETAILS { get; set; }
        public virtual DbSet<TABLE_SALES> TABLE_SALES { get; set; }
        public virtual DbSet<TABLE_SALES_DETAILS> TABLE_SALES_DETAILS { get; set; }
        public virtual DbSet<TABLE_SALES_RETURN> TABLE_SALES_RETURN { get; set; }
        public virtual DbSet<TABLE_SALES_RETURN_DETAILS> TABLE_SALES_RETURN_DETAILS { get; set; }
        public virtual DbSet<TABLE_SUPPLIER> TABLE_SUPPLIER { get; set; }
        public virtual DbSet<TABLE_SYS_USER> TABLE_SYS_USER { get; set; }
        public virtual DbSet<TABLE_THANA> TABLE_THANA { get; set; }
        public virtual DbSet<TABLE_UNIT> TABLE_UNIT { get; set; }
        public virtual DbSet<ITEM_PICTURE> ITEM_PICTURE { get; set; }
        public virtual DbSet<ITEM_DISCOUNT> ITEM_DISCOUNT { get; set; }
        public virtual DbSet<TABLE_CONTACT_TYPE> TABLE_CONTACT_TYPE { get; set; }
        public virtual DbSet<TABLE_USER_GROUP> TABLE_USER_GROUP { get; set; }
        public virtual DbSet<TABLE_CONTACT> TABLE_CONTACT { get; set; }
        public virtual DbSet<LOGIN_INFO> LOGIN_INFO { get; set; }
        public virtual DbSet<ITEM_SELECT> ITEM_SELECT { get; set; }
    
        public virtual int spPrimaryId(string tableName, string fieldName, ObjectParameter id)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPrimaryId", tableNameParameter, fieldNameParameter, id);
        }
    
        public virtual int spValidateUserLogin(string loginID, string loginPassword)
        {
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var loginPasswordParameter = loginPassword != null ?
                new ObjectParameter("LoginPassword", loginPassword) :
                new ObjectParameter("LoginPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidateUserLogin", loginIDParameter, loginPasswordParameter);
        }
    }
}
